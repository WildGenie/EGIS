//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18034
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Xml.Serialization;
using System.Linq;

// 
// This source code was auto-generated by xsd, Version=4.0.30319.17929.
// 

namespace GeoDecisions.Esb.Server.Core
{
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class properties
    {

        private string keyField;

        private string valueField;

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string key
        {
            get { return this.keyField; }
            set { this.keyField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get { return this.valueField; }
            set { this.valueField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
    public partial class EsbConfiguration
    {
        private List<TransporterConfigs> transporterConfigCollection = new List<TransporterConfigs>();
        private List<DatabaseConfigs> databaseConfigCollection = new List<DatabaseConfigs>();

        private object[] itemsField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("add", typeof (properties))]
        [System.Xml.Serialization.XmlElementAttribute("databases", typeof (EsbConfigurationDatabases),
            Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        [System.Xml.Serialization.XmlElementAttribute("transporters", typeof (EsbConfigurationTransporters),
            Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public object[] Items
        {
            get { return this.itemsField; }
            set { this.itemsField = value; }
        }

        public void BuildConfigClasses()
        {

            foreach (object t in Items)
            {
                if (t.GetType() == typeof(EsbConfigurationDatabases))
                {
                    foreach (EsbConfigurationDatabasesDatabase database in ((EsbConfigurationDatabases)t).database)
                    {
                        DatabaseConfigs databaseConfigs = new DatabaseConfigs();
                        databaseConfigs.name = database.name;
                        databaseConfigs.priority = database.priority;
                        foreach (properties property in database.Properties)
                        {
                            if (property.key == "host") databaseConfigs.host = property.value;
                            if (property.key == "connectString") databaseConfigs.connectString = property.value;
                            if (property.key == "database") databaseConfigs.database = property.value;
                        }
                        databaseConfigCollection.Add(databaseConfigs);
                    }
                }

                Console.WriteLine(" ");


                if (t.GetType() == typeof(EsbConfigurationTransporters))
                {
                    foreach (
                        EsbConfigurationTransportersTransporter transporter in
                            ((EsbConfigurationTransporters)t).transporter)
                    {
                        TransporterConfigs transporterConfigs = new TransporterConfigs();
                        transporterConfigs.name = transporter.name;
                        transporterConfigs.enabled = transporter.enabled;
                        foreach (properties property in transporter.Properties)
                        {
                            if (property.key == "host") transporterConfigs.host = property.value;
                            if (property.key == "port") transporterConfigs.port = property.value;
                        }
                        transporterConfigCollection.Add(transporterConfigs);
                    }
                }
            }
        }

        
        public void Display()
        {
            Console.WriteLine("Transporters and Databases");
            //List<TransporterConfigs> transporterConfigCollection = new List<TransporterConfigs>();
            //List<DatabaseConfigs> databaseConfigCollection = new List<DatabaseConfigs>();

            foreach (object t in Items)
            {
                if (t.GetType() == typeof (EsbConfigurationDatabases))
                {
                    foreach (EsbConfigurationDatabasesDatabase database in ((EsbConfigurationDatabases) t).database)
                    {
                        DatabaseConfigs databaseConfigs = new DatabaseConfigs();
                        databaseConfigs.name = database.name;
                        databaseConfigs.priority = database.priority;
                        Console.WriteLine(database.name + ", Priority=" + database.priority);
                        foreach (properties property in database.Properties)
                        {
                            if (property.key == "host") databaseConfigs.host = property.value;
                            if (property.key == "connectString") databaseConfigs.connectString = property.value;
                            Console.WriteLine(property.key + ", Value=" + property.value);
                        }
                        databaseConfigCollection.Add(databaseConfigs);
                    }
                }

                Console.WriteLine(" ");


                if (t.GetType() == typeof (EsbConfigurationTransporters))
                {
                    foreach (
                        EsbConfigurationTransportersTransporter transporter in
                            ((EsbConfigurationTransporters) t).transporter)
                    {
                        TransporterConfigs transporterConfigs = new TransporterConfigs();
                        transporterConfigs.name = transporter.name;
                        transporterConfigs.enabled = transporter.enabled;
                        Console.WriteLine(transporter.name + ", Enabled=" + transporter.enabled);
                        foreach (properties property in transporter.Properties)
                        {
                            if (property.key == "host") transporterConfigs.host = property.value;
                            if (property.key == "port") transporterConfigs.port = property.value;
                            Console.WriteLine(property.key + ", Value=" + property.value);
                        }
                        transporterConfigCollection.Add(transporterConfigs);
                    }
                }
            }
        }

        public void DisplayTransporterConfigs()
        {
            transporterConfigCollection.ForEach(
                t =>
                    {
                        Console.WriteLine(t.name + ", " + t.enabled + ", " + t.host + ", " + t.port);
                    }
                );
        }


        public void DisplayDatabaseConfigs()
        {
            databaseConfigCollection.ForEach(
                d =>
                    {
                        Console.WriteLine(d.name + ", " + d.priority + ", " + d.host + ", " + d.connectString);
                    }
                );
        }

        public TransporterConfigs TransporterConfig(string transporterName)
        {
            foreach (var config in transporterConfigCollection)
            {
                if (config.name == transporterName)
                {
                    return config;
                }
            }
            return null;
        }

        public DatabaseConfigs DatabaseConfig(string databaseName)
        {
            foreach (var config in databaseConfigCollection)
            {
                if (config.name == databaseName)
                {
                    return config;
                }
            }
            return null;
        }
    }

    public class TransporterConfigs
    {

        public string enabled { get; set; }

        public string name { get; set; }

        public string host { get; set; }

        public string port { get; set; }
    }

    public class DatabaseConfigs
    {

        public string priority { get; set; }

        public string name { get; set; }

        public string host { get; set; }

        public string connectString { get; set; }

        public string database { get; set; }
    }


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class EsbConfigurationDatabases
    {

        private EsbConfigurationDatabasesDatabase[] databaseField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("database", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
        public EsbConfigurationDatabasesDatabase[] database
        {
            get { return this.databaseField; }
            set { this.databaseField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class EsbConfigurationDatabasesDatabase
    {

        private properties[] _propertiesField;

        private string nameField;

        private string priorityField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("add")]
        public properties[] Properties
        {
            get { return this._propertiesField; }
            set { this._propertiesField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get { return this.nameField; }
            set { this.nameField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string priority
        {
            get { return this.priorityField; }
            set { this.priorityField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class EsbConfigurationTransporters
    {

        private EsbConfigurationTransportersTransporter[] transporterField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("transporter", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)
        ]
        public EsbConfigurationTransportersTransporter[] transporter
        {
            get { return this.transporterField; }
            set { this.transporterField = value; }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
    public partial class EsbConfigurationTransportersTransporter
    {

        private properties[] _propertiesField;

        private string nameField;

        private string enabledField;

        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("add")]
        public properties[] Properties
        {
            get { return this._propertiesField; }
            set { this._propertiesField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get { return this.nameField; }
            set { this.nameField = value; }
        }

        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string enabled
        {
            get { return this.enabledField; }
            set { this.enabledField = value; }
        }
    }
}